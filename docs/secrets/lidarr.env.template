# Lidarr secret template (dotenv).  Replace values and then encrypt with sops (follow repo conventions).
# Example:
#   cp lidarr.env.template lidarr.env
#   edit lidarr.env with real values
#   sops --encrypt --output lidarr.enc.env lidarr.env
#
# After encryption place the encrypted file under docs/secrets/ (e.g. docs/secrets/lidarr.enc.env)
# The repo's runtime decryptor (scripts/sops-decrypt-all.sh) will decrypt to /run/config-repo-secrets
# and the values will be available for manual consumption or further post-processing.

# Lidarr API key (optional — can be generated in the Lidarr UI and stored here if you prefer)
LIDARR_API_KEY="<REPLACE_ME>"

# Download client (qBittorrent) credentials (used by Lidarr to send torrents to your client)
QBITTORRENT_HOST="127.0.0.1"
QBITTORRENT_PORT="8080"
QBITTORRENT_USERNAME="<REPLACE_ME>"
QBITTORRENT_PASSWORD="<REPLACE_ME>"
QBITTORRENT_USE_SSL="false"   # true/false

# Paths mapping notes:
# - The containers in compose will map host paths into the container (see compose file).
# - If you use a remote download host (like ultraseedbox) adjust the remote path below so Lidarr can import completed downloads.
DOWNLOAD_CLIENT_REMOTE_PATH="/home/r0xyd0g/downloads"     # path as seen by remote service (container expects /home/r0xyd0g/downloads)
MUSIC_ROOT_HOST="/marvin/Videos/Music"                   # host path to music library
MUSIC_ROOT_CONTAINER="/music"                            # path inside the container (matches docker-compose)

# Indexer manager (Prowlarr) — optional if you run Prowlarr
PROWLARR_BASE_URL="http://prowlarr:9696"
PROWLARR_API_KEY="<REPLACE_ME>"

# Optional: notifications (example)
PLEX_TOKEN="<REPLACE_ME>"
DISCORD_WEBHOOK_URL="<REPLACE_ME>"

# Notes:
# - Do NOT commit plaintext secrets. Encrypt this file with sops/age before committing.
# - The repo's runner will decrypt encrypted secrets into /run/config-repo-secrets with strict permissions.
# - If you need custom fields for other download clients, add them here following the KEY=VALUE format.
